services:
    #
    #
    #    REACT_FRONTEND
    #
    #
    #  frontend:
    #    build:
    #      context: ./app/frontend
    #    volumes:
    #      - ./app/frontend:/app
    #    labels:
    #      - "traefik.enable=true"
    #      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.rule=Host(`${FRONTEND_DOMAIN}`)"
    #      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_frontend.loadbalancer.server.port=${FRONTEND_PORT}"
    #      - "traefik.docker.network=${DOCKER_NETWORK}"
    #      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.tls=false"
    #      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.entrypoints=${TRAEFIK_ENTRYPOINT}"
    #    environment:
    #      - NEXT_PUBLIC_BACKEND_URL=http://${BACKEND_DOMAIN}:${BACKEND_PORT}
    #      - NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}
    #    # depends_on:
    #    #   - backend

    frontend:
        build:
            context: ./app/frontend
        ports:
            - '3000:3000'
        volumes:
            - ./app/frontend:/app
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.rule=Host(`${FRONTEND_DOMAIN}`)"
            - "traefik.http.services.${COMPOSE_PROJECT_NAME}_frontend.loadbalancer.server.port=${FRONTEND_PORT}"
            - "traefik.docker.network=${DOCKER_NETWORK}"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.tls=false"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_frontend.entrypoints=${TRAEFIK_ENTRYPOINT}"
        environment:
            - NEXT_PUBLIC_BACKEND_URL=http://${BACKEND_DOMAIN}:${BACKEND_PORT}
            - NUXT_TELEMETRY_DISABLED=1
            - NUXT_HOST=0.0.0.0
            - NODE_ENV=development

    backend:
        build:
            context: ./app/backend
        volumes:
            - ./app/backend:/app
            - perry-projects_ticketsystem-hub_mod_cache:/go/pkg/mod
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_backend.rule=Host(`${BACKEND_DOMAIN}`)"
            - "traefik.http.services.${COMPOSE_PROJECT_NAME}_backend.loadbalancer.server.port=${BACKEND_PORT}"
            - "traefik.docker.network=${DOCKER_NETWORK}"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_backend.tls=false"
        environment:
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
            - PORT=${BACKEND_PORT}
        depends_on:
            - postgres

    postgres:
        image: postgres:latest
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    adminer:
        image: adminer
        depends_on:
            - postgres
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.rule=Host(`${ADMINER_DOMAIN}`)"
            - "traefik.http.services.${COMPOSE_PROJECT_NAME}_adminer.loadbalancer.server.port=8080"
            - "traefik.docker.network=${DOCKER_NETWORK}"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.tls=false"
            - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.entrypoints=${TRAEFIK_ENTRYPOINT}"

volumes:
    pgdata:
    perry-projects_ticketsystem-hub_mod_cache:


networks:
    default:
        name: "${DOCKER_NETWORK}"
        external: true
        driver: bridge
